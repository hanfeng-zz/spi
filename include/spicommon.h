
/*
 * Copyright (C) 2025-09-15  zheng zhao
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License v3.0 or later.
 * See <https://www.gnu.org/licenses/>.
 */


#ifndef SPI_COMMON_H
#define SPI_COMMON_H

#pragma once

#include <stdint.h>

#define SPI_INVALID_DEVICE              "INVALID_DEVICE"
#define SPI_GROUPS_PACKET               __attribute__((packed))
#define SPI_GROUPS_MESSAGE_LEN          20
#define SPI_GROUPS_INVALID_VAL_CHAR     0xFFu
#define SPI_GROUPS_INVALID_VAL_SHORT    0xFFFFu

enum spiGroups : uint8_t {
    SPI_GROUPS_WRITE_CPLD                  = 0xc0,
    SPI_GROUPS_READ_CPLD                   = 0xc1,
    //liu
    SPI_GROUPS_IDT82V2052E_WRITE           = 0x00,
    SPI_GROUPS_IDT82V2052E_READ            = 0x01,

    SPI_GROUPS_CU500X_READ                 = 0x01,
    SPI_GROUPS_CU500X_WRITE                = 0x00,

    SPI_GROUPS_IDT82P2916_WRITE            = 0x00,
    SPI_GROUPS_IDT82P2916_READ             = 0x01,

    //clock
    SPI_GROUPS_AU5508_READ                 = 0b000,
    SPI_GROUPS_AU5508_WRITE                = 0b100,

    SPI_GROUPS_AU53XX_READ                 = 0,
    SPI_GROUPS_AU53XX_WRITE                = 1,

    SPI_GROUPS_8A34XXX_PAGE_READ           = 0x00,
    SPI_GROUPS_8A34XXX_PAGE_WRITE          = 0x80,
    SPI_GROUPS_8A34XXX_READ_MASK           = 0xFF,
    SPI_GROUPS_8A34XXX_WRITE_MASK          = 0x7F,
    SPI_GROUPS_8A34XXX_READ                = 0x80,
    SPI_GROUPS_8A34XXX_WRITE               = 0x7F,
    SPI_GROUPS_8A34XXX_DEF_0               = 0x7c,
    SPI_GROUPS_8A34XXX_DEF_1               = 0x10,
    SPI_GROUPS_8A34XXX_DEF_2               = 0x20,
};

struct spi_config {
    uint8_t     mode;
    uint8_t     bitsPerWord;
    uint8_t     lsbFirst;
    uint32_t    speed;
    uint16_t    delay;
};

struct spi_groups_cpld {
    uint8_t op;
    uint16_t addr;
    uint16_t data;
} SPI_GROUPS_PACKET;

struct spi_groups_e1 {
    uint8_t op;
    uint8_t addr;
    uint16_t data;
} SPI_GROUPS_PACKET;

struct spi_groups_cp500x {
    uint8_t op      : 1;
    uint8_t addr    : 7;
    uint8_t data;
} SPI_GROUPS_PACKET;

struct spi_groups_idt82v252e {
    uint8_t addr    : 6;
    uint8_t op      : 1;
    uint8_t rsv     : 1;
    uint8_t data;
} SPI_GROUPS_PACKET;

struct spi_groups_idt82p2916 {
    uint8_t addrH   : 3;
    uint8_t rsv     : 4;
    uint8_t op      : 1;
    uint8_t addrL;
    uint8_t data;
} SPI_GROUPS_PACKET;

struct spi_groups_au5508 {
    uint8_t rsv      : 5;
    uint8_t op       : 3;
    uint8_t addr;
    uint8_t data;
} SPI_GROUPS_PACKET;

struct spi_groups_cu53xx {
    uint8_t op      : 1;
    uint8_t rsv     : 7;
    uint8_t addr;
    uint8_t data;
} SPI_GROUPS_PACKET;

struct spi_groups_idt8a34xxx_page {
    uint8_t def0;
    uint8_t op;
    uint8_t addrH;
    uint8_t def1;
    uint8_t def2;
} SPI_GROUPS_PACKET;

struct spi_groups_idt8a34xxx_op {
    uint8_t addrL;
    uint8_t data;
} SPI_GROUPS_PACKET;

struct spi_groups_msg {
    union {
        struct spi_groups_cpld             cpld;
        struct spi_groups_e1               e1;
        struct spi_groups_cp500x           cp500x;
        struct spi_groups_idt82v252e       idt82v2052e;
        struct spi_groups_idt82p2916       idt82p2916;
        struct spi_groups_au5508           au5508;
        struct spi_groups_cu53xx           cu53xx;
        struct spi_groups_idt8a34xxx_page  idt8A34xxxpage;
        struct spi_groups_idt8a34xxx_op    idt8A34xxxop;
        uint8_t msg[SPI_GROUPS_MESSAGE_LEN];
    };
} SPI_GROUPS_PACKET;

const uint8_t table_bit_reverse[256] = {
        0x00, 0x80, 0x40, 0xC0, 0x20, 0xA0, 0x60, 0xE0, 0x10, 0x90, 0x50, 0xD0, 0x30, 0xB0, 0x70, 0xF0,
        0x08, 0x88, 0x48, 0xC8, 0x28, 0xA8, 0x68, 0xE8, 0x18, 0x98, 0x58, 0xD8, 0x38, 0xB8, 0x78, 0xF8,
        0x04, 0x84, 0x44, 0xC4, 0x24, 0xA4, 0x64, 0xE4, 0x14, 0x94, 0x54, 0xD4, 0x34, 0xB4, 0x74, 0xF4,
        0x0C, 0x8C, 0x4C, 0xCC, 0x2C, 0xAC, 0x6C, 0xEC, 0x1C, 0x9C, 0x5C, 0xDC, 0x3C, 0xBC, 0x7C, 0xFC,
        0x02, 0x82, 0x42, 0xC2, 0x22, 0xA2, 0x62, 0xE2, 0x12, 0x92, 0x52, 0xD2, 0x32, 0xB2, 0x72, 0xF2,
        0x0A, 0x8A, 0x4A, 0xCA, 0x2A, 0xAA, 0x6A, 0xEA, 0x1A, 0x9A, 0x5A, 0xDA, 0x3A, 0xBA, 0x7A, 0xFA,
        0x06, 0x86, 0x46, 0xC6, 0x26, 0xA6, 0x66, 0xE6, 0x16, 0x96, 0x56, 0xD6, 0x36, 0xB6, 0x76, 0xF6,
        0x0E, 0x8E, 0x4E, 0xCE, 0x2E, 0xAE, 0x6E, 0xEE, 0x1E, 0x9E, 0x5E, 0xDE, 0x3E, 0xBE, 0x7E, 0xFE,
        0x01, 0x81, 0x41, 0xC1, 0x21, 0xA1, 0x61, 0xE1, 0x11, 0x91, 0x51, 0xD1, 0x31, 0xB1, 0x71, 0xF1,
        0x09, 0x89, 0x49, 0xC9, 0x29, 0xA9, 0x69, 0xE9, 0x19, 0x99, 0x59, 0xD9, 0x39, 0xB9, 0x79, 0xF9,
        0x05, 0x85, 0x45, 0xC5, 0x25, 0xA5, 0x65, 0xE5, 0x15, 0x95, 0x55, 0xD5, 0x35, 0xB5, 0x75, 0xF5,
        0x0D, 0x8D, 0x4D, 0xCD, 0x2D, 0xAD, 0x6D, 0xED, 0x1D, 0x9D, 0x5D, 0xDD, 0x3D, 0xBD, 0x7D, 0xFD,
        0x03, 0x83, 0x43, 0xC3, 0x23, 0xA3, 0x63, 0xE3, 0x13, 0x93, 0x53, 0xD3, 0x33, 0xB3, 0x73, 0xF3,
        0x0B, 0x8B, 0x4B, 0xCB, 0x2B, 0xAB, 0x6B, 0xEB, 0x1B, 0x9B, 0x5B, 0xDB, 0x3B, 0xBB, 0x7B, 0xFB,
        0x07, 0x87, 0x47, 0xC7, 0x27, 0xA7, 0x67, 0xE7, 0x17, 0x97, 0x57, 0xD7, 0x37, 0xB7, 0x77, 0xF7,
        0x0F, 0x8F, 0x4F, 0xCF, 0x2F, 0xAF, 0x6F, 0xEF, 0x1F, 0x9F, 0x5F, 0xDF, 0x3F, 0xBF, 0x7F, 0xFF
};

#endif //SPI_COMMON_H
